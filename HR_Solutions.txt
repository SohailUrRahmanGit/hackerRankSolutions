var finalRank  : [Int] = []
var uniqueArray = [Int]()

func getRank(scores: [Int]) -> [Int] {
for element in scores {
    if !uniqueArray.contains(element) {
        uniqueArray.append(element)
    }
}
 return uniqueArray
}

func climbingLeaderboard(ranked: [Int], player: [Int]) -> [Int] {
 var rankedArray = ranked

 for (_,value) in player.enumerated() {
     rankedArray.append(value)
     rankedArray.sort(by: >)
     let rankTable  =  getRank(scores: rankedArray)
     if let index = rankTable.firstIndex(of: value) {
     let addedIndex = index + 1
      finalRank.append(addedIndex)
     } 
     uniqueArray.removeAll()
 }
  return finalRank
}


var ranks = climbingLeaderboard(ranked: [100,100,50,40,40,20,10], player: [5,25,50,120])
print(ranks)




func designerPdfViewer(h: [Int], word: String) -> Int {
   let largestAlphabet = 1 
   let wordCount = word.count
   let numbers = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]
   
   let doubledNumbers = numbers.map { h[$0] }

   print(doubledNumbers)
   return wordCount * largestAlphabet
}
print(designerPdfViewer(h: [1,3,1,3,1,4,1,3,2,5,5,5,5,1,1,5,5,1,5,2,5,5,5,5,5,5], word: "torn"))